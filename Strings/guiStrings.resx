<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ButtonExtract" xml:space="preserve">
    <value>Extract</value>
  </data>
  <data name="ButtonOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="CtxMenuClose" xml:space="preserve">
    <value>_Close</value>
  </data>
  <data name="CtxMenuCopy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="CtxMenuCreate" xml:space="preserve">
    <value>Create archive...</value>
  </data>
  <data name="CtxMenuCut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="CtxMenuDelete" xml:space="preserve">
    <value>_Delete</value>
  </data>
  <data name="CtxMenuExplorer" xml:space="preserve">
    <value>Browse in _Explorer</value>
  </data>
  <data name="CtxMenuExtract" xml:space="preserve">
    <value>Extract</value>
  </data>
  <data name="CtxMenuOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="CtxMenuPaste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="CtxMenuRefresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="CtxMenuRename" xml:space="preserve">
    <value>_Rename</value>
  </data>
  <data name="CtxMenuSortBy" xml:space="preserve">
    <value>Sort by</value>
  </data>
  <data name="CtxMenuSortByName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="CtxMenuSortBySize" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="CtxMenuSortByType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="CtxMenuUnsorted" xml:space="preserve">
    <value>Unsorted</value>
  </data>
  <data name="HeaderName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="HeaderSize" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="HeaderType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="LabelArchiveFormat" xml:space="preserve">
    <value>Archive format</value>
  </data>
  <data name="LabelArchiveName" xml:space="preserve">
    <value>Archive name</value>
  </data>
  <data name="LabelArchiveOptions" xml:space="preserve">
    <value>Archive options</value>
  </data>
  <data name="LabelExtractAllTo" xml:space="preserve">
    <value>Extract files from {0} to</value>
  </data>
  <data name="LabelExtractFileTo" xml:space="preserve">
    <value>Extract {0} to</value>
  </data>
  <data name="MenuAbout" xml:space="preserve">
    <value>About Game Resource browser</value>
  </data>
  <data name="MsgDeletedItem" xml:space="preserve">
    <value>Deleted {0}</value>
  </data>
  <data name="MsgDirectoryNotFound" xml:space="preserve">
    <value>directory not found</value>
  </data>
  <data name="MsgEmptyArchive" xml:space="preserve">
    <value>archive is empty</value>
  </data>
  <data name="MsgErrorExtracting" xml:space="preserve">
    <value>Error extracting file</value>
  </data>
  <data name="MsgErrorOpening" xml:space="preserve">
    <value>Error opening file</value>
  </data>
  <data name="MsgExtractComplete" xml:space="preserve">
    <value>Extracted {0} into {1}</value>
  </data>
  <data name="MsgExtractedFiles1" xml:space="preserve">
    <value>Extracted {0} file</value>
  </data>
  <data name="MsgExtractingArchive" xml:space="preserve">
    <value>Extracting files from {0}</value>
  </data>
  <data name="MsgExtractingFile" xml:space="preserve">
    <value>Extracting file from {0}</value>
  </data>
  <data name="MsgExtractingTo" xml:space="preserve">
    <value>Extracting files from {0} to {1}</value>
  </data>
  <data name="MsgImageSize" xml:space="preserve">
    <value>Image {0} x {1} x {2}bpp</value>
  </data>
  <data name="MsgNoFiles" xml:space="preserve">
    <value>no files to extract</value>
  </data>
  <data name="MsgReady" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="MsgUnableInterpret" xml:space="preserve">
    <value>unable to interpret image format</value>
  </data>
  <data name="MsgUnknownFormat" xml:space="preserve">
    <value>file could not be opened as resource archive</value>
  </data>
  <data name="MsgVersion" xml:space="preserve">
    <value>Version {0}</value>
  </data>
  <data name="TextAboutBuiltin" xml:space="preserve">
    <value>[builtin]</value>
  </data>
  <data name="TextAboutSupportedArchives" xml:space="preserve">
    <value>Supported archives:</value>
  </data>
  <data name="TextAboutSupportedImages" xml:space="preserve">
    <value>Supported image formats:</value>
  </data>
  <data name="TextAboutTitle" xml:space="preserve">
    <value>About Game Resource browser</value>
  </data>
  <data name="TextAllFiles" xml:space="preserve">
    <value>All Files</value>
  </data>
  <data name="TextAsIs" xml:space="preserve">
    <value>as is</value>
  </data>
  <data name="TextChooseArchive" xml:space="preserve">
    <value>Choose archive location</value>
  </data>
  <data name="TextChooseDestDir" xml:space="preserve">
    <value>Choose destination directory</value>
  </data>
  <data name="TextCreateArchive" xml:space="preserve">
    <value>Create archive</value>
  </data>
  <data name="TextCreateArchiveError" xml:space="preserve">
    <value>Archive creation error</value>
  </data>
  <data name="Type_directory" xml:space="preserve">
    <value>&lt;DIR&gt;</value>
  </data>
  <data name="TextEncoding" xml:space="preserve">
    <value>Text encoding</value>
  </data>
  <data name="TextExtractImages" xml:space="preserve">
    <value>Extract images</value>
  </data>
  <data name="TextExtractText" xml:space="preserve">
    <value>Extract text</value>
  </data>
  <data name="TextExtractTitle" xml:space="preserve">
    <value>Extract from archive</value>
  </data>
  <data name="TextParametersTitle" xml:space="preserve">
    <value>Archive parameters</value>
  </data>
  <data name="TextSaveAs" xml:space="preserve">
    <value>Save as</value>
  </data>
  <data name="TextSaveImagesAs" xml:space="preserve">
    <value>Save images as</value>
  </data>
  <data name="TextTitle" xml:space="preserve">
    <value>Game Resource browser</value>
  </data>
  <data name="TooltipBack" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="TooltipForward" xml:space="preserve">
    <value>Forward</value>
  </data>
  <data name="MsgOverwrite" xml:space="preserve">
    <value>File {0}
already exists.

Overwrite?</value>
  </data>
  <data name="TextConfirmOverwrite" xml:space="preserve">
    <value>Confirm overwrite</value>
  </data>
  <data name="MsgCreatingArchive" xml:space="preserve">
    <value>Creating archive {0}</value>
  </data>
  <data name="MenuOpen" xml:space="preserve">
    <value>Open...</value>
  </data>
  <data name="MenuRecent" xml:space="preserve">
    <value>Recent files</value>
  </data>
  <data name="MsgChooseFiles" xml:space="preserve">
    <value>Choose files to extract</value>
  </data>
  <data name="MenuExit" xml:space="preserve">
    <value>E_xit</value>
  </data>
  <data name="MenuFile" xml:space="preserve">
    <value>_File</value>
  </data>
  <data name="MenuHelp" xml:space="preserve">
    <value>_Help</value>
  </data>
  <data name="MsgExtractedFiles2" xml:space="preserve">
    <value>Extracted {0} files</value>
  </data>
  <data name="MsgFiles1" xml:space="preserve">
    <value>{0} file</value>
  </data>
  <data name="MsgFiles2" xml:space="preserve">
    <value>{0} files</value>
  </data>
  <data name="MsgConfirmDeleteFiles" xml:space="preserve">
    <value>Are you sure you want to delete these files?</value>
  </data>
  <data name="TextDeleteFiles" xml:space="preserve">
    <value>Delete files</value>
  </data>
  <data name="MsgDeletedItems1" xml:space="preserve">
    <value>Deleted {0} file</value>
  </data>
  <data name="MsgDeletedItems2" xml:space="preserve">
    <value>Deleted {0} files</value>
  </data>
  <data name="MenuFitWindow" xml:space="preserve">
    <value>Fit preview _window to image</value>
  </data>
  <data name="MenuToggleMenuBar" xml:space="preserve">
    <value>Show/hide main _menu bar</value>
  </data>
  <data name="MenuToggleStatusBar" xml:space="preserve">
    <value>Show/hide _status bar</value>
  </data>
  <data name="MenuToggleToolBar" xml:space="preserve">
    <value>Show/hide _toolbar</value>
  </data>
  <data name="MenuView" xml:space="preserve">
    <value>_View</value>
  </data>
  <data name="CtxMenuConvert" xml:space="preserve">
    <value>Convert images...</value>
  </data>
  <data name="ButtonConvert" xml:space="preserve">
    <value>Convert</value>
  </data>
  <data name="LabelDestinationFormat" xml:space="preserve">
    <value>Choose destination format</value>
  </data>
  <data name="TextConvertImages" xml:space="preserve">
    <value>Convert images</value>
  </data>
  <data name="MsgConvertingImage" xml:space="preserve">
    <value>Converting image {0}</value>
  </data>
  <data name="TextImageConvertError" xml:space="preserve">
    <value>Image conversion error</value>
  </data>
</root>